name: Reusable release workflow

on:
  workflow_call:
    inputs:
      repository:
        description: 'Image repository'
        type: string
        required: false
        default: duyhenryer/wolfi-images/${{ github.workflow }}
      tag:
        description: 'Image tag'
        type: string
        required: false
        default: 'latest'
      config-dir:
        description: 'Config directory'
        type: string
        required: false
        default: images/${{ github.workflow }}
      target:
        description: 'Image target'
        type: string
        required: false
        default: 'prod'
      packages:
        description: 'Additional packages'
        type: string
        required: false
        default: ''
      archs:
        description: 'Architectures'
        type: string
        required: false
        default: 'amd64,arm64'
      scan:
        description: 'Enable scan'
        type: string
        required: false
        default: 'true'

jobs:
  publish:
    permissions:
      actions: read
      attestations: write
      contents: read
      id-token: write
      packages: write
      security-events: write

    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.digest.outputs.digest }}
      registry: ${{ steps.vars.outputs.registry }}
      image: ${{ steps.vars.outputs.image }}
    steps:
      - uses: imjasonh/setup-crane@v0.4
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.9.2
        with:
          cosign-release: 'v2.5.3'
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set Vars
        id: vars
        shell: bash
        run: |
          export REGISTRY="ghcr.io"
          if [[ "${{ github.ref_name }}" != "main" ]]; then
            export REGISTRY="ttl.sh"
          fi
          echo "registry=${REGISTRY}" >> $GITHUB_OUTPUT
          echo "image=${REGISTRY}/${{ inputs.repository }}:${{ inputs.tag }}" >> $GITHUB_OUTPUT

      - if: steps.vars.outputs.registry == 'ghcr.io'
        name: Login to GitHub Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create SBOM directory
        id: output
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/sbom

      - name: Publish image
        id: apko
        uses: distroless/actions/apko-publish@v1.0.1
        with:
          config: ${{ inputs.config-dir }}/${{ inputs.target }}.yaml
          tag: ${{ steps.vars.outputs.image }}
          package-append: ${{ inputs.packages }}
          archs: ${{ inputs.archs }}
          sbom-path: ${{ github.workspace }}/sbom

      - id: digest
        shell: bash
        run: |
          echo "digest=$(crane digest ${{ steps.vars.outputs.image }})" >> $GITHUB_OUTPUT
          if [[ "${{ inputs.archs }}" == *"amd64"* ]]; then
              echo "digest-amd64=$(crane digest --platform=linux/amd64 ${{ steps.vars.outputs.image }})" >> $GITHUB_OUTPUT
          else
              echo "digest-amd64=''" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ inputs.archs }}" == *"arm64"* ]]; then
              echo "digest-arm64=$(crane digest --platform=linux/arm64 ${{ steps.vars.outputs.image }})" >> $GITHUB_OUTPUT
          else
              echo "digest-arm64=''" >> $GITHUB_OUTPUT
          fi

      - name: Sign image
        shell: bash
        env:
          COSIGN_YES: "true"
        run: |
          cosign sign \
            --recursive \
            --oidc-provider=github-actions \
            ${{ steps.vars.outputs.registry }}/${{ inputs.repository }}@${{ steps.digest.outputs.digest }}

      - name: Attest index SBOM
        shell: bash
        env:
          COSIGN_YES: "true"
        run: |
          cosign attest \
            --type=spdxjson \
            --predicate=${{ github.workspace }}/sbom/sbom-index.spdx.json \
            --oidc-provider=github-actions \
            ${{ steps.vars.outputs.registry }}/${{ inputs.repository }}@${{ steps.digest.outputs.digest }}

      - if: steps.digest.outputs.digest-amd64 != ''
        name: Attest amd64 SBOM
        shell: bash
        env:
          COSIGN_YES: "true"
        run: |
          cosign attest \
            --type=spdxjson \
            --predicate=${{ github.workspace }}/sbom/sbom-x86_64.spdx.json \
            --oidc-provider=github-actions \
            ${{ steps.vars.outputs.registry }}/${{ inputs.repository }}@${{ steps.digest.outputs.digest-amd64 }}

      - if: steps.digest.outputs.digest-arm64 != ''
        name: Attest arm64 SBOM
        shell: bash
        env:
          COSIGN_YES: "true"
        run: |
          cosign attest \
            --type=spdxjson \
            --predicate=${{ github.workspace }}/sbom/sbom-aarch64.spdx.json \
            --oidc-provider=github-actions \
            ${{ steps.vars.outputs.registry }}/${{ inputs.repository }}@${{ steps.digest.outputs.digest-arm64 }}

      - if: steps.vars.outputs.registry == 'ghcr.io'
        name: Attest build provenance
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ steps.vars.outputs.registry }}/${{ inputs.repository }}
          subject-digest: ${{ steps.digest.outputs.digest }}
          push-to-registry: true